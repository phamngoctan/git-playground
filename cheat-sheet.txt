##### Do all in git bash
### Tasks that you have to do manually to create a repository
# Go to Github.com(assuming you are signed-in)
# Create a repository and name it accordingly
# Copy the git link
#          example: https://github.com/phamngoctan/git-playground

git config --global user.name "Tan Pham"
git config --global user.email "your-email@gmail.com"

# To set the user.name and email of a specific repository
cd to the repository folder
git config user.name "phamngoctan"
git config user.email "pnt.dtqn1991@gmail.com"
git config user.name
git config user.email
# Show current user.name in the config
# Show the current user.email in the config log

# To create new file (README.md) and add a content to it
echo "# git-playground" >> README.md

# To set the url for the local point to the remote repository
git remote add set-url https://github.com/phamngoctan/git-playground
git remote add git-playground https://github.com/phamngoctan/git-playground
#          add action
#              Name of the remote
#                      URL of the github repository   
# To remove the remote url
git remote delete set-url

git diff
git commit -m 'my notes' -- cheat-sheet.txt

git add README.md
git commit -m "add readme file" README.md

# To see the current remote URL
git remote -v

# To push to remote repository
git push git-playground master
#        push to this remote uri name
#                       push to this branch

# Some log after committing
# git push git-playground master
#Enumerating objects: 5, done.
#Counting objects: 100% (5/5), done.
#Delta compression using up to 4 threads
#Compressing objects: 100% (3/3), done.
#Writing objects: 100% (3/3), 712 bytes | 712.00 KiB/s, done.
#Total 3 (delta 1), reused 0 (delta 0)
#remote: Resolving deltas: 100% (1/1), completed with 1 local object.
#To https://github.com/phamngoctan/git-playground
#   5e30279..25235f5  master -> master

# Check current branch name
git branch

# Before creating a new branch, pull the changes from upstream
git pull git-playground master

#Logs
#From https://github.com/phamngoctan/git-playground
# * branch            master     -> FETCH_HEAD
#Already up to date.

# To create a branch
git checkout -b branch-to-play
git checkout -b new-feature

# To switch a branch (without -b option)
git checkout master 
git switch branch-to-play

# To delete a branch
git branch --delete new-feature
git branch -d new-feature
# above command is the same
git branch -D new-feature
#-D means --delete --force
# it equals the below command
git branch -d -f new-feature

# To push a branch to remote
git push git-playground branch-to-play
#        remote url name
#                       branch name to be pushed
#Logs
#Total 0 (delta 0), reused 0 (delta 0)
#remote:
remote: Create a pull request for 'branch-to-play' on GitHub by visiting:
remote:      https://github.com/phamngoctan/git-playground/pull/new/branch-to-play
remote:
To https://github.com/phamngoctan/git-playground
 * [new branch]      branch-to-play -> branch-to-play

# Need help
git branch --help

# Commit changes again
# To push code to remote
git push git-playground branch-to-play
# To merge a branch to master branch
# Merge from master to current branch first to keep master branch clean
git merge master
#Do it on the development branch 
git checkout master
#switch to master branch
git merge branch-to-play
git push git-playground master


#Git pull from a specific version
git pull git-playground master
#        remote name
#                       branch-name

#Git check changed files
git status
#OR
git diff --name-only

# show only conflict file
git diff --name-only --diff-filter=U


#
